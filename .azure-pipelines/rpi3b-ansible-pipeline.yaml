trigger: none

pool: pve-self-hosted-agents

variables:
  workingDirectory: $(System.DefaultWorkingDirectory)/workloads/rpi3b
  ansibleVersion: '6.0.0'
  # Uncomment and set this in Azure DevOps variable groups for password auth
  # rpi_password: $(RPI_PASSWORD)

steps:
- checkout: self
  displayName: 'Checkout repository'

- task: Bash@3
  displayName: 'Debug Working Directory'
  inputs:
    workingDirectory: '$(workingDirectory)'
    targetType: 'inline'
    script: |
      echo "##[debug] Current working directory: $(pwd)"
      echo "##[debug] Listing files:"
      ls -la

- script: |
    pipx install ansible==$(ansibleVersion)
    pipx inject ansible community.docker azure-identity azure-keyvault-secrets
    ansible-galaxy collection install community.docker
    ansible-galaxy collection install azure.azcollection
    ansible-galaxy install geerlingguy.docker
  displayName: 'Install Ansible and collections'

- script: |
    ansible --version
    ansible-galaxy collection list
  displayName: 'Verify Ansible installation'

- task: DownloadSecureFile@1
  name: ansibleSSHKey
  displayName: 'Download SSH private key'
  inputs:
    secureFile: 'ansible-rpi3b-key'

- task: AzureCLI@2
  displayName: 'Ansible dry run (check mode)'
  inputs:
    azureSubscription: $(serviceConnection)
    scriptType: 'bash'
    scriptLocation: 'inlineScript'
    inlineScript: |
      cd workloads/rpi3b
      ansible-playbook -i inventory.ini playbook.yml --check --diff

- task: AzureCLI@2
  displayName: 'Run Ansible playbook'
  condition: and(succeeded(), eq(variables['Build.SourceBranch'], 'refs/heads/main'))
  inputs:
    azureSubscription: $(serviceConnection)
    scriptType: 'bash'
    scriptLocation: 'inlineScript'
    inlineScript: |
      cd workloads/rpi3b
      ansible-playbook -i inventory.ini playbook.yml

- script: |
    rm -f ~/.ssh/id_rsa
  displayName: 'Cleanup SSH key'
  condition: always()